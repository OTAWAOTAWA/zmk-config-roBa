#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/pointing.h>

#define ZMK_MOUSE_DEFAULT_SCRL_VAL 400
#define MOUSE 4
#define SCROLL 5
#define NUM 6

&mt {
    flavor = "balanced";
    quick-tap-ms = <0>;
};

/ {
    combos {
        compatible = "zmk,combos";

        tab {
            bindings = <&kp TAB>;
            key-positions = <11 12>;
        };

        shift_tab {
            bindings = <&kp LS(TAB)>;
            key-positions = <12 13>;
        };

        muhennkann {
            bindings = <&to_layer_0 INT_MUHENKAN>;
            key-positions = <11 10>;
        };

        double_quotation {
            bindings = <&kp DOUBLE_QUOTES>;
            key-positions = <20 21>;
        };

        eq {
            bindings = <&kp EQUAL>;
            key-positions = <24 25>;
        };
    };

    macros {
        to_layer_0: to_layer_0 {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&to 0 &macro_param_1to1 &kp MACRO_PLACEHOLDER>;
            label = "TO_LAYER_0";
        };
    };

    behaviors {
        lt_to_layer_0: lt_to_layer_0 {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_TAP_TO_0";
            bindings = <&mo>, <&to_layer_0>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };

        scroll_up_down: behavior_sensor_rotate_mouse_wheel_up_down {
            compatible = "zmk,behavior-sensor-rotate";
            #sensor-binding-cells = <0>;
            bindings = <&msc SCRL_UP>, <&msc SCRL_DOWN>;

            tap-ms = <20>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp Q           &kp W         &kp E      &kp R               &kp T                                                   &kp Y        &kp U    &lt 3 I      &kp O    &kp P
&kp A           &kp S         &kp D      &kp F               &kp G        &bt BT_CLR                  &kp ESCAPE     &kp H        &kp J    &kp K        &kp L    &kp MINUS
&kp Z           &kp X         &kp C      &kp V               &kp B        &kp DELETE                  &kp TAB        &kp N        &lt 5 M  &lt 2 COMMA  &kp DOT  &kp QUESTION
&kp LEFT_SHIFT  &kp LEFT_WIN  &kp LCTRL  &mt LEFT_ALT LANG2  &lt 1 SPACE  &lt_to_layer_0 3 LANG1      &kp BACKSPACE  &lt 2 ENTER                                 &kp RIGHT_SHIFT
            >;

            sensor-bindings = <&inc_dec_kp DOWN UP>;
        };

        kigou {
            bindings = <
&kp AT_SIGN  &kp LEFT_BRACE    &kp RIGHT_BRACE    &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS                              &kp CARET    &kp EXCLAMATION       &kp PIPE   &kp GRAVE  &none
&kp HASH     &kp SINGLE_QUOTE  &kp DOUBLE_QUOTES  &kp LEFT_BRACKET      &kp RIGHT_BRACKET      &trans          &kp ESCAPE  &kp PERCENT  &kp AMPERSAND         &kp TILDE  &none      &kp UNDERSCORE
&kp DOLLAR   &kp COLON         &kp SEMI           &kp LESS_THAN         &kp GREATER_THAN       &kp DELETE      &kp TAB     &kp SLASH    &kp NON_US_BACKSLASH  &none      &none      &kp ASTERISK
&trans       &trans            &trans             &trans                &trans                 &trans          &trans      &trans                                                   &kp RIGHT_SHIFT
            >;
        };

        yajirusi {
            bindings = <
&kp ESCAPE  &none   &none   &none   &none                            &kp PRINTSCREEN  &kp LA(LEFT)  &kp UP    &kp LA(RIGHT)  &kp DELETE
&kp TAB     &none   &none   &none   &none   &none           &kp ESC  &none            &kp LEFT      &kp DOWN  &kp RIGHT      &none
&none       &none   &none   &none   &none   &kp DELETE      &kp TAB  &none            &mkp MB1      &none     &mkp MB2       &none
&trans      &trans  &trans  &trans  &trans  &trans          &trans   &trans                                                  &kp RIGHT_SHIFT
            >;
        };

        SCROLL {
            bindings = <
&trans  &kp F12  &kp F11  &kp F10  &kp F9                      &kp NUMBER_7  &kp NUMBER_8  &kp NUMBER_9  &kp PLUS      &kp MINUS
&trans  &kp F8   &kp F7   &kp F6   &kp F5  &trans      &trans  &kp NUMBER_4  &kp NUMBER_5  &kp NUMBER_6  &kp ASTERISK  &kp SLASH
&trans  &kp F4   &kp F3   &kp F2   &kp F1  &trans      &trans  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp NUMBER_0  &kp PERIOD
&trans  &trans   &trans   &trans   &trans  &trans      &trans  &trans                                                  &kp EQUAL
            >;
        };

        MOUSE {
            bindings = <
&trans  &trans  &trans  &trans  &trans                      &trans  &trans    &trans    &trans    &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &mkp MB1  &mkp MB3  &mkp MB2  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans    &trans    &trans    &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans                                &trans
            >;
        };

        layer_6 {
            bindings = <
&trans  &trans        &trans        &trans        &trans                           &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4
&trans  &trans        &trans        &trans        &trans  &trans      &trans       &trans        &trans        &trans        &trans        &trans
&trans  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &trans  &trans      &bootloader  &trans        &trans        &trans        &trans        &bt BT_CLR
&trans  &trans        &trans        &trans        &trans  &trans      &trans       &trans                                                  &bt BT_CLR_ALL
            >;
        };
    };
};
