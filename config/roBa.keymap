#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

// Mouse Scroll Value
#define ZMK_POINTING_DEFAULT_SCRL_VAL 100

#define MOUSE 4
#define SCROLL 5
#define NUM 6

// OS設定を日本語キーボードのまま使用するための変換定義

#define JP_DQUOTE       AT                // "
#define JP_AMPERSAND    CARET             // &
#define JP_QUOTE        AMPERSAND         // '
#define JP_EQUAL        UNDER             // =
#define JP_CARET        EQUAL             // ^
#define JP_YEN          0x89              // ¥
#define JP_PLUS         COLON             // +
#define JP_TILDE        PLUS              // ~
#define JP_PIPE         LS(0x89)          // |
#define JP_AT           LEFT_BRACKET      // @
#define JP_COLON        SINGLE_QUOTE      // :
#define JP_ASTERISK     DOUBLE_QUOTES     // *
#define JP_BACKQUOTE    LEFT_BRACE        // `
#define JP_UNDERSCORE   LS(0x87)          // _
#define JP_LBRACKET     RIGHT_BRACKET     // [
#define JP_RBRACKET     BACKSLASH         // ]
#define JP_LPAREN       ASTERISK          // (
#define JP_RPAREN       LEFT_PARENTHESIS  // )
#define JP_LBRACE       RIGHT_BRACE       // {
#define JP_RBRACE       PIPE              // }
#define JP_KANA         LANGUAGE_1        // かな
#define JP_EISU         LANGUAGE_2        // 英数
#define JP_HANZEN       GRAVE             // 半角/全角

&mt {
    flavor = "balanced";
    quick-tap-ms = <0>;
};

/ {
    combos {
        compatible = "zmk,combos";

        tab {
            bindings = <&kp TAB>;
            key-positions = <11 12>;
        };

        shift_tab {
            bindings = <&kp LS(TAB)>;
            key-positions = <12 13>;
        };

        muhennkann {
            bindings = <&to_layer_0 INT_MUHENKAN>;
            key-positions = <11 10>;
        };

        double_quotation {
            bindings = <&kp DOUBLE_QUOTES>;
            key-positions = <20 21>;
        };

        eq {
            bindings = <&kp EQUAL>;
            key-positions = <24 25>;
        };
    };

    macros {
        to_layer_0: to_layer_0 {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&to 0 &macro_param_1to1 &kp MACRO_PLACEHOLDER>;
            label = "TO_LAYER_0";
        };

        mail: mail {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp T &kp S &kp U &kp T &kp O &kp M &kp U &kp UNDER &kp O &kp O &kp T &kp A &kp W &kp A &kp AT &kp T &kp O &kp M &kp O &kp E &kp G &kp A &kp W &kp A &kp DOT &kp C &kp O &kp DOT &kp J &kp P>;
            label = "MAIL";
        };

        pwd: pwd {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&none &kp LS(I) &kp N &kp T &kp E &kp L &kp JP_AT>;
            label = "PWD";
        };
    };

    behaviors {
        lt_to_layer_0: lt_to_layer_0 {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_TAP_TO_0";
            bindings = <&mo>, <&to_layer_0>;

            #binding-cells = <2>;
            tapping-term-ms = <400>;
        };

        scroll: mouse_wheel {
            compatible = "zmk,behavior-sensor-rotate";
            #sensor-binding-cells = <0>;
            bindings = <&msc SCRL_LEFT>, <&msc SCRL_RIGHT>;

            tap-ms = <90>;
            label = "lr";
        };

        new_behavior: new_behavior {
            compatible = "zmk,behavior-sensor-rotate";
            label = "NEW_BEHAVIOR";
            #sensor-binding-cells = <0>;
            bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;

            tap-ms = <20>;
        };

        // Encoder to Mouse Scroll

        scroll_up_down: behavior_sensor_rotate_mouse_wheel_up_down {
            compatible = "zmk,behavior-sensor-rotate";
            #sensor-binding-cells = <0>;
            bindings = <&msc SCRL_UP>, <&msc SCRL_DOWN>;

            tap-ms = <20>;
        };

        scroll_down_up: behavior_sensor_rotate_mouse_wheel_down_up {
            compatible = "zmk,behavior-sensor-rotate";
            #sensor-binding-cells = <0>;
            bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;

            tap-ms = <20>;
        };

        scroll_left_right: behavior_sensor_rotate_mouse_wheel_left_right {
            compatible = "zmk,behavior-sensor-rotate";
            #sensor-binding-cells = <0>;
            bindings = <&msc SCRL_LEFT>, <&msc SCRL_RIGHT>;

            tap-ms = <20>;
        };

        scroll_right_left: behavior_sensor_rotate_mouse_wheel_right_left {
            compatible = "zmk,behavior-sensor-rotate";
            #sensor-binding-cells = <0>;
            bindings = <&msc SCRL_RIGHT>, <&msc SCRL_LEFT>;

            tap-ms = <20>;
        };

        volume_up_down: behavior_sensor_rotate_volume_up_down {
            compatible = "zmk,behavior-sensor-rotate";
            #sensor-binding-cells = <0>;
            bindings = <&kp C_VOLUME_UP>, <&kp C_VOLUME_DOWN>;

            tap-ms = <20>;
        };


    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            sensor-bindings = <&scroll_up_down>, <&scroll_up_down>;
            bindings = <
&kp Q             &kp W         &kp E           &kp R               &kp T                                                   &kp Y        &kp U    &lt 3 I      &kp O    &kp P
&kp A             &kp S         &kp D           &kp F               &kp G        &none                       &kp ESCAPE     &kp H        &kp J    &kp K        &kp L    &kp MINUS
&kp Z             &kp X         &kp C           &kp V               &kp B        &kp DELETE                  &kp TAB        &kp N        &lt 5 M  &lt 2 COMMA  &kp DOT  &kp QUESTION
&kp LEFT_CONTROL  &kp LEFT_WIN  &kp LEFT_SHIFT  &mt LEFT_ALT LANG2  &lt 1 SPACE  &lt_to_layer_0 3 LANG1      &kp BACKSPACE  &lt 2 ENTER                                 &kp RIGHT_SHIFT
            >;
        };

        kigou {
            bindings = <
&kp JP_AT   &kp RIGHT_BRACE   &kp PIPE       &kp JP_LPAREN      &kp LEFT_PARENTHESIS                              &kp EQUAL    &kp EXCLAMATION  &kp LS(0x89)  &kp LEFT_BRACE  &none
&kp HASH    &kp AMPERSAND     &kp AT         &kp RIGHT_BRACKET  &kp BACKSLASH         &trans          &kp ESCAPE  &kp PERCENT  &kp CARET        &kp PLUS      &none           &kp LS(0x87)
&kp DOLLAR  &kp SINGLE_QUOTE  &kp SEMICOLON  &kp LESS_THAN      &kp GREATER_THAN      &kp DELETE      &kp TAB     &kp SLASH    &kp 0x89         &none         &none           &kp DOUBLE_QUOTES
&trans      &trans            &trans         &trans             &trans                &trans          &trans      &trans                                                      &kp RIGHT_SHIFT
            >;

            sensor-bindings = <&inc_dec_kp K_VOL_DN2 LS(K_VOLUME_UP)>;
        };

        yajirusi {
            bindings = <
&kp ESCAPE  &none   &none   &none   &mail                               &kp PRINTSCREEN  &kp LA(LEFT)  &kp UP    &kp LA(RIGHT)  &kp DELETE
&kp TAB     &none   &none   &none   &pwd       &none           &kp ESC  &none            &kp LEFT      &kp DOWN  &kp RIGHT      &none
&none       &none   &none   &none   &kp LG(L)  &kp DELETE      &kp TAB  &none            &mkp MB1      &none     &mkp MB2       &none
&trans      &trans  &trans  &trans  &trans     &trans          &trans   &trans                                                  &kp RIGHT_SHIFT
            >;

            sensor-bindings = <&scroll>;
        };

        SCROLL {
            bindings = <
&trans  &kp F12  &kp F11  &kp F10  &kp F9                      &kp NUMBER_7  &kp NUMBER_8  &kp NUMBER_9  &kp JP_PLUS      &kp MINUS
&trans  &kp F8   &kp F7   &kp F6   &kp F5  &trans      &trans  &kp NUMBER_4  &kp NUMBER_5  &kp NUMBER_6  &kp JP_ASTERISK  &kp SLASH
&trans  &kp F4   &kp F3   &kp F2   &kp F1  &trans      &trans  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp NUMBER_0     &kp PERIOD
&trans  &trans   &trans   &trans   &trans  &trans      &trans  &trans                                                     &kp JP_EQUAL
            >;

            sensor-bindings = <&inc_dec_kp LEFT_ARROW RIGHT_ARROW>;
        };

        MOUSE {
            bindings = <
&trans  &trans  &trans  &trans  &trans                      &trans  &trans    &trans    &trans    &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &mkp MB1  &mkp MB3  &mkp MB2  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans    &trans    &trans    &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans                                &trans
            >;

            sensor-bindings = <&scroll>;
        };

        layer_6 {
            bindings = <
&trans  &trans        &trans        &trans        &trans                           &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4
&trans  &trans        &trans        &trans        &trans  &trans      &trans       &trans        &trans        &trans        &trans        &trans
&trans  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &trans  &trans      &bootloader  &trans        &trans        &trans        &trans        &bt BT_CLR
&trans  &trans        &trans        &trans        &trans  &trans      &trans       &trans                                                  &bt BT_CLR_ALL
            >;
        };
    };
};
